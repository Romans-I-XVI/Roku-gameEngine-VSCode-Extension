{
	"engineobject": {
		"prefix": "engineobject",
		"body": [
			"function ${1:function_name}(object)",
			"",
			"\tobject.onCreate = function(args)",
			"\t\t$0",
			"\tend function",
			"",
			"end function",
			""
		],
		"description": "Template for defining a new Roku-gameEngine object."
	},
	"engineobjectinterface": {
		"prefix": "engineobjectinterface",
		"body": [
			"function if${1:}(interface)",
			"\t$0",
			"",
			"end function",
			""
		],
		"description": "Template for defining a new Roku-gameEngine interface."
	},
	"image_args": {
		"prefix": "image_args",
		"body": [
			"{",
			"\tname: \"main\"",
			"\toffset_x: 0,",
			"\toffset_y: 0,",
			"\torigin_x: 0,",
			"\torigin_y: 0,",
			"\tscale_x: 1.0,",
			"\tscale_y: 1.0,",
			"\tcolor: &hFFFFFF,",
			"\talpha: 255,",
			"\tenabled: true,",
			"",
			"\t' For animation to work all 4 of the following properties must be defined",
			"\timage_count: 1,",
			"\timage_width: invalid,",
			"\timage_height: invalid,",
			"\tanimation_speed: 0",
			"}"
		],
		"description": "Template with the default values of image_args to be passed in to addImage"
	},
	"drawtext": {
		"prefix": "DrawText",
		"body": "DrawText(${1:draw2d as Object}, ${2:text as String}, ${3:x as Integer}, ${4:y as Integer}, ${5:font as Object}, ${6|\"left\",\"right\",\"center\"|}${7: [, color = &hEBEBEBFF]})",
		"description": "Helper function for drawing text with left, right, or center horizontal alignment."
	},
	"registryRead": {
		"prefix": "registryRead",
		"body": "registryRead(${1:registry_section as String}, ${2:key as String}, ${3:default_value = invalid as Dynamic})",
		"description": "Returns a value from the registry, or default if one is supplied and no registry value exists yet."
	},
	"registryWrite": {
		"prefix": "registryWrite",
		"body": "registryWrite(${1:registry_section as String}, ${2:key as String}, ${3:value as Dynamic})",
		"description": "Writes the supplied value to the registry. \nNote: Values are formatted to JSON before saving, so value can be any JSON formattable object."
	},

	"color_black": {
		"prefix": "black :: color",
		"body": "&h000000FF"
	},
    "color_white": {
		"prefix": "white :: color",
		"body": "&hFFFFFFFF"
	},
    "color_red": {
		"prefix": "red :: color",
		"body": "&hFF0000FF"
	},
    "color_green": {
		"prefix": "green :: color",
		"body": "&h00FF00FF"
	},
    "color_blue": {
		"prefix": "blue :: color",
		"body": "&h0000FFFF"
	},
    "color_cyan": {
		"prefix": "cyan :: color",
		"body": "&h00FFFFFF"
	},
    "color_magenta": {
		"prefix": "magenta :: color",
		"body": "&hFF00FFFF"
	},
    "color_yellow": {
		"prefix": "yellow :: color",
		"body": "&hFFFF00FF"
	},
    "color_orange": {
		"prefix": "orange :: color",
		"body": "&hFF7F00FF"
	},
    "color_rose": {
		"prefix": "rose :: color",
		"body": "&hFF007FFF"
	},
    "color_violet": {
		"prefix": "violet :: color",
		"body": "&h7F00FFFF"
	}
}
